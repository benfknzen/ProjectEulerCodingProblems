# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


def fib(n):
    if n <= 1:
        return 1
    else:
        return fib(n-1) + fib(n-2)


if __name__ == '__main__':
    # n = 0
    # maximum = 4000000
    # while fib(n) < maximum:
    #     if fib(n) < maximum:
    #         n += 1
    # print(n)
    # print(fib(32))
    # found out that 32 is the fib max value from the script above

    sumOfEven = 0
    for i in range(33):
        x = fib(i)
        if x % 2 == 0:
            sumOfEven += x

    print(sumOfEven)
    # prints 4613732



